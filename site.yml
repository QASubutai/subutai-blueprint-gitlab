# Ansible Playbook for Subutai GitLab blueprint
# Tue May 22 15:49:23 -03 2018
# Author: arthurpbs at gmail dot com
# Version: 0.1
---

- hosts: all
  gather_facts: false
  remote_user: root
  tasks: 

    - name: Update
      raw: apt-get -y --allow-unauthenticated update || true

    - name: Ensure python is available
      raw: test -e /usr/bin/python || apt install -y --allow-unauthenticated python-minimal

    - name: Ensure python-apt is available
      raw: test -d /usr/share/python-apt || apt install -y --allow-unauthenticated python-apt

    - name: Add gitlab deb source
      raw: curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.deb.sh | bash

    - name: Upgrade
      raw: apt-get -y --allow-unauthenticated upgrade

- hosts: gl
    remote_user: root
    tasks: 

        - name: Install GitLab dependencies.
          package: name={{ item }} state=present
          with_items:
            - openssh-server
            - curl
            - openssl
            - tzdata
            - ca-certificates

        - name: Install GitLab CE
          shell: apt-get -y --allow-unauthenticated install gitlab-ee
          environment:
              EXTERNAL_URL: "{{ gitlab_dn }}"

#       - name: Download GitLab repository installation script.
#         get_url:
#           url: "{{ gitlab_repository_installation_script_url }}"
#           dest: /tmp/gitlab_install_repository.sh
#           validate_certs: "{{ gitlab_download_validate_certs }}"
#         when: (gitlab_file.stat.exists == false)
#   
#       - name: Install GitLab repository
#         command: bash /tmp/gitlab_install_repository.sh
#         when: (gitlab_file.stat.exists == false)
#   
#       - name: Define the Gitlab package name.
#         set_fact:
#           gitlab_package_name: "{{ gitlab_edition }}{{ gitlab_package_version_separator }}{{ gitlab_version }}"
#         when: gitlab_version != ''
#   
#       - name: Install GitLab
#         package:
#           name: "{{ gitlab_package_name | default(gitlab_edition) }}"
#           state: present
#         when: (gitlab_file.stat.exists == false)
#   
#   # Start and configure GitLab. Sometimes the first run fails, but after that,
#   # restarts fix problems, so ignore failures on this run.
#       - name: Reconfigure GitLab (first run).
#         command: >
#           gitlab-ctl reconfigure
#           creates=/var/opt/gitlab/bootstrapped
#         failed_when: false
#   
#       - name: Create GitLab SSL configuration folder.
#         file:
#           path: /etc/gitlab/ssl
#           state: directory
#           owner: root
#           group: root
#           mode: 0700
#         when: gitlab_create_self_signed_cert
#   
#       - name: Create self-signed certificate.
#         command: >
#           openssl req -new -nodes -x509 -subj "{{ gitlab_self_signed_cert_subj }}" -days 3650 -keyout {{ gitlab_ssl_certificate_key }} -out {{ gitlab_ssl_certificate }} -extensions v3_ca
#           creates={{ gitlab_ssl_certificate }}
#         when: gitlab_create_self_signed_cert
#   
#       - name: Copy GitLab configuration file.
#         template:
#           src: "{{ gitlab_config_template }}"
#           dest: /etc/gitlab/gitlab.rb
#           owner: root
#           group: root
#           mode: 0600
#         notify: restart gitlab

   

